#!/usr/bin/bash

# Description 
# Utility BASH functions for mesh generation, case and mesh cleanup. 
# Used to verify the LENT algorithm.

# Authors
# Tomislav Maric tomislav<<dot>>maric<<a>>gmx<<dot>>com

generate_hex_mesh() {


    CASE=$1 

    blockMesh -case $CASE
}

generate_tet_mesh() {


    CASE=$1

    echo $CASE/gmsh-input.geo

    gmsh -3 $CASE/gmsh-input.geo 

    gmshToFoam -case $CASE  $CASE/gmsh-input.msh

    # Clean up.
    rm $CASE/gmsh-input.msh
}

generate_poly_mesh() {


    CASE=$1

    generate_tet_mesh $CASE

    # Call polyDualMesh 
    # Move the mesh directory to constant/polyMesh
    # Clean up.
}

generate_mesh() {

    CASE=$1

    CASE_UPPERCASE=${CASE^^}
    CASE_UPPERCASE=${CASE_UPPERCASE##*/}

    if [[ "$CASE_UPPERCASE" == *HEX* ]]
    then
        generate_hex_mesh $CASE
    fi

    if [[ "$CASE_UPPERCASE" == *TET* ]]
    then
        generate_tet_mesh $CASE
    fi

    if [[ "$CASE_UPPERCASE" == *POLY* ]]
    then
        generate_poly_mesh $CASE
    fi
}

is_openfoam_case() {

    CASE=$1

    FILES=$(ls $CASE)

}

clear_case() {

    CASE=$1

    echo "Clearing case " $CASE
    pyFoamClearCase.py $CASE
    foamClearPolyMesh -case $CASE
    echo "Reseting 0 directory " $CASE/0
    rm -rf $CASE/0
    cp -r $CASE/0.orig $CASE/0
    echo "Removing error files " $CASE/*.dat
    rm -rf $CASE/*.dat
    echo "Removing pyFoam files " $CASE
    rm -rf $CASE/PyFoam*
    echo "Removing postProcessing directory " $CASE
    rm -rf $CASE/postProcessing
    echo "Removing log files " $CASE
    rm -rf $CASE/*.log
}

clear_cases() {

    echo "BEGIN clear_lent_cases " $1 

    CASES_PARENT_FOLDER=$1

    # Clear cases, clear poly mesh, reset the initial directory
    for CASE in $(find $CASES_PARENT_FOLDER -type d -name *-0*); 
    do 
        clear_case $CASE
    done;

    echo "END clear_lent_cases " $1 
}

clear_lent_cases() {

    echo "BEGIN clear_lent_cases " $1 

    CASES_PARENT_FOLDER=$1

    # Delete gmsh.msh cases.
    find $CASES_PARENT_FOLDER -type f -name *.msh -exec rm -rf {} \; 
    # Delete the front stl files.
    find $CASES_PARENT_FOLDER -type f -name front-*.stl -exec rm -rf {} \; 

    clear_cases $CASES_PARENT_FOLDER

    echo "END clear_lent_cases " $1 
}

# First argument is the tested string. 
# Second argument, is split with spaces as delimiter into an array.
# If any of the second arguments are in the first argument, return true.  
found_pattern() {

    WORD_ARGUMENT=$1
    WORDS=(${2})

    for i in "${!WORDS[@]}"
    do
        if [[ ${WORD_ARGUMENT^^} =~ ${WORDS[i]^^} ]]; 
        then
            return 0;
        fi
    done

    return 1;
}

generate_meshes() {

    echo "BEGIN run_cases " $1

    CASES_PARENT_FOLDER=$1
    EXCLUDED_CASES=$2

    for CASE in $(find $CASES_PARENT_FOLDER -type d -name *-0*); 
    do
        # If case is not excluded.  
        if found_pattern $CASE "$EXCLUDED_CASES";
        then 
            continue
        else
            echo "Creating mesh " $CASE
            generate_mesh $CASE
        fi
    done;

    echo "END run_cases " $1

}
