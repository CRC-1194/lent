#!/usr/bin/env python

from optparse import OptionParser
import sys
from subprocess import call

usage = "usage: ./AllrunParameter -s studyName  -t testType"

parser = OptionParser(usage=usage)

parser.add_option("-s", "--study", dest="study",
                  help="Pattern that identifies the type of the mesh used for the study. To select the appropriate mesher it must contain only one of the following words:'hex' or 'tet' or 'poly'.", 
                  metavar="STUDY")

parser.add_option("-t", "--testType", dest="testType", 
                  help="Type of the test: 'plane' or 'sphere'.", 
                  metavar="TEST")

(options, args) = parser.parse_args()

if (options.study == None): 
    print ("Error: study option not used. Use --help option for more information.") 
    sys.exit(1)

if (options.testType == None): 
    print ("Error: test option not used. Use --help option for more information.") 
    sys.exit(1)

mesher = ""

# - Set the mesher 
if ("HEX" in options.study.upper()):
    mesher = "blockMesh"
elif ("POLY" in options.study.upper()):
    mesher = "pMesh"
elif("TET" in options.study.upper()):
    mesher = "tetMesh"
else:
    print ("Error: Undefined mesh study type. Use --help option for more information.") 
    sys.exit(2)

if (("PLANE" not in options.testType.upper()) and 
    ("SPHERE" not in options.testType.upper())):
    print ("Error: Undefined test type. Use --help option for more information.") 
    sys.exit(3)

## - Initialize directory structure
call(["lentParameterInit", "-c", "lentPointReconCase", "-p", 
      "lentPointRecon%s.parameter" % options.study, "-s", "%s" % options.study])

## - Create meshes
call(["bulkeval", "%s_00" % options.study, mesher]) 

## - Run the testing application
call(["bulkeval", "%s_00" % options.study, "lentTestFrontPointReconstruction", 
      "-test", options.testType]) 
